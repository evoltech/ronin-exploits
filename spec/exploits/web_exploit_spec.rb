require 'ronin/exploits/web_exploit'

require 'spec_helper'

describe Exploits::WebExploit do
  describe "targeted_url" do
    it "should create a targeted URL using the url param" do
      url = URI('http://www.example.com/')
      exploit = Exploits::WebExploit.new(:url => url)

      exploit.targeted_url.should == url
    end

    it "should create a targeted URL using the host param" do
      host = 'www.example.com'
      exploit = Exploits::WebExploit.new(:host => host)

      exploit.targeted_url.host.should == host
    end

    it "should create a targeted URL using the host and path params" do
      host = 'www.example.com'
      path = '/'
      exploit = Exploits::WebExploit.new(:host => host, :path => path)

      exploit.targeted_url.host.should == host
      exploit.targeted_url.path.should == path
    end

    it "should create a targeted URL using the host and url params" do
      host = 'www.target.com'
      url = URI('http://www.example.com/path')
      exploit = Exploits::WebExploit.new(:host => host, :url => url)

      exploit.targeted_url.host.should == host
      exploit.targeted_url.path.should == url.path
    end

    it "should create a targeted URL using the path and url params" do
      path = '/path'
      url = URI('http://www.example.com/')
      exploit = Exploits::WebExploit.new(:path => path, :url => url)

      exploit.targeted_url.host.should == url.host
      exploit.targeted_url.path.should == path
    end

    it "should raise a MisingParam exception if all params are missing" do
      exploit = Exploits::WebExploit.new

      lambda { exploit.targeted_url }.should raise_error(Parameters::MissingParam)
    end

    it "should raise a MissingParam exception if the url and host params are missing" do
      exploit = Exploits::WebExploit.new(:path => '/')

      lambda { exploit.targeted_url }.should raise_error(Parameters::MissingParam)
    end
  end
end
