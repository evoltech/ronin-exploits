require 'spec_helper'
require 'ronin/exploits/local'
require 'ronin/exploits/helpers/binary'

describe Exploits::Helpers::Binary do
  subject do
    Exploits::Local.object do
      helper :binary

      targeting(:arch => Arch.x86)
      targeting(:arch => nil)

      def pack_integer
        pack(0xffffaaaa)
      end

      def pack_integer_with_address_length
        pack(0xffffaaaa,2)
      end
    end
  end

  it "should require a targeted arch" do
    subject.target = subject.targets.last
    subject.target.arch.should be_nil

    lambda {
      subject.pack_integer
    }.should raise_error(Exploits::TargetDataMissing)
  end

  it "should be able to pack an integer" do
    subject.target = subject.targets.first

    subject.pack_integer.should == "\xaa\xaa\xff\xff"
  end

  it "should be able to pack an integer with an address length" do
    subject.target = subject.targets.first

    subject.pack_integer_with_address_length.should == "\xaa\xaa"
  end
end
