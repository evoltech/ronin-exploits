require 'spec_helper'
require 'ronin/attacks/lfi'

describe Attacks::LFI do
  let(:query_param)   { 'q' }
  let(:original_data) { 'foo' }
  let(:traversal)     { 4 }

  let(:uri) { URI("http://www.example.com/page.php?#{query_param}=#{original_data}") }
  let(:url) { URL.from(uri) }

  let(:attack) do
    described_class.new(
      :url           => url,
      :query_param   => query_param,
      :original_data => original_data,
      :traversal     => traversal,
      :terminate     => true
    )
  end
  subject { attack }

  describe "#inject" do
    let(:path) { '/etc/passwd' }

    subject { attack.inject(path) }

    it "should preserve the original data" do
      subject.should be_start_with(original_data)
    end

    it "should traverse up n+1 directories" do
      subject.should include('../' * (traversal + 1))
    end

    it "should support terminating the path with a \\0 byte" do
      subject.should be_end_with("\0")
    end
  end
end
