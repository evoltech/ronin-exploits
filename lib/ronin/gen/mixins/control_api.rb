#
# Ronin Exploits - A Ruby library for Ronin that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2010 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

module Ronin
  module Gen
    module Mixins
      module ControlAPI
        CONTROL_ARGS = {
          :mem_read => ['address'],
          :mem_write => ['address', 'data'],
          :mem_exec => ['address'],
          :file_create => ['path'],
          :file_read => ['path'],
          :file_write => ['path', 'data'],
          :file_modify => ['path', 'data'],
          :file_ownership => ['path','user'],
          :file_mtime => ['path','timestamp'],
          :file_ctime => ['path','timestamp'],
          :dir_create => ['path'],
          :dir_listing => ['path'],
          :socket_redirect => ['host','port'],
          :socket_connect => ['host','port'],
          :socket_listen => ['port'],
          :socket_read => ['num_bytes'],
          :socket_write => ['data'],
          :code_exec => ['code'],
          :command_exec => ['program','arguments'],
          :drop_privs => ['user']
        }

        protected

        #
        # Generates the block arguments for the control methods.
        #
        # @param [String] behavior
        #   Name of the behavior for the control method.
        #
        # @since 0.4.0
        #
        def control_args(behavior)
          args = CONTROL_ARGS[behavior]

          if args
            '|' + args.join(',') + '|'
          else
            ''
          end
        end
      end
    end
  end
end
