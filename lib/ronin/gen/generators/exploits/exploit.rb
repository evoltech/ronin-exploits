#
# Ronin Exploits - A Ruby library for Ronin that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2010 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

require 'ronin/gen/mixins/control_api'
require 'ronin/gen/file_generator'
require 'ronin/exploits/config'
require 'ronin/author'

module Ronin
  module Gen
    module Generators
      module Exploits
        #
        # Generates a new ronin exploit file.
        #
        class Exploit < FileGenerator

          include Mixins::ControlAPI

          # Default name to give the exploit
          DEFAULT_NAME = 'Exploit'

          # Default description to give the exploit
          DEFAULT_DESCRIPTION = %{This is an exploit.}

          # Default status to give the exploit
          DEFAULT_STATUS = 'potential'

          # Default authors of the exploit
          DEFAULT_AUTHORS = [Author::ANONYMOUSE]

          # Default product name
          DEFAULT_PRODUCT = 'Product'

          # Default product version
          DEFAULT_PRODUCT_VERSION = '0.0.1'

          # Default disclosure information to give the exploit
          DEFAULT_DISCLOSURE = [:in_wild]

          class_option :helpers, :type => :array, :default => []
          class_option :name, :type => :string, :default => DEFAULT_NAME
          class_option :description, :type => :string, :default => DEFAULT_DESCRIPTION
          class_option :status, :type => :string, :default => DEFAULT_STATUS
          class_option :disclosure, :type => :array, :default => DEFAULT_DISCLOSURE
          class_option :authors, :type => :array, :default => DEFAULT_AUTHORS
          class_option :arch, :type => :string
          class_option :os, :type => :string
          class_option :os_version, :type => :string
          class_option :product, :type => :string, :default => DEFAULT_PRODUCT
          class_option :product_version, :type => :string, :default => DEFAULT_PRODUCT_VERSION
          class_option :control_methods, :type => :array, :default => []

          argument :path, :type => :string, :require => true

          #
          # Generate a basic exploit.
          #
          # @since 0.3.0
          #
          def generate
            erb File.join('ronin','gen','exploits','exploit.erb'),
                self.path
          end

        end
      end
    end
  end
end
