#
#--
# Ronin Exploits - A Ruby library for Ronin that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2009 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#++
#

require 'ronin/controls/exceptions/not_implemented'
require 'ronin/controls/file_system'

module Ronin
  module Controls
    module FileRead
      include FileSystem

      #
      # Returns +true+ if the specified _path_ exists, returns +false+
      # otherwise.
      #
      def exists?(path)
        raise(NotImplemented,"the exists? method has not been implemented",caller)
      end

      #
      # Returns +true+ if the specified _path_ is a file, returns +false+
      # otherwise.
      #
      def file?(path)
        raise(NotImplemented,"the file? method has not been implemented",caller)
      end

      #
      # Returns the contents of the file at the specified _path_.
      #
      def read_file(path)
        raise(NotImplemented,"the read_file method has not been implemented",caller)
      end
    end
  end
end
